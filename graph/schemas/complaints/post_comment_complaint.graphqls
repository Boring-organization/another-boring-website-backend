type PostCommentComplaint implements Complaint{
    id: String!
    author: User!
    comment: PostComment!
    text: String!
    createdAt: Int64!
    deletedAt: Int64
    violationTypeCode: String!
    complaintStatus: ComplaintStatus!
}

input NewPostCommentComplaint {
    text: String! @maxLength(value: 10000)
    violationTypeCode: String! @maxLength(value: 100) @notEmptyString
}

extend type Mutation {
    createPostCommentComplaint(postCommentIdHolder: IdHolder! @idExistInTable(table: Post_comment), newComplaint: NewPostCommentComplaint!): PostCommentComplaint! @authenticated
    deletePostCommentComplaint(complaintIdHolder: IdHolder! @idExistInTable(table: Post_comment_complaint)): DeleteResult! @authenticated
}

extend type Query {
    getMyActivePostCommentComplaints: [PostCommentComplaint!]! @authenticated
    getMyClosedPostCommentComplaints: [PostCommentComplaint!]! @authenticated
    getMyRefusedPostCommentComplaints: [PostCommentComplaint!]! @authenticated
}