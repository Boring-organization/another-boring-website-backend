package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"TestGoLandProject/graph/model"
	"context"
	"fmt"
)

// CreateGalleryComplaint is the resolver for the createGalleryComplaint field.
func (r *mutationResolver) CreateGalleryComplaint(ctx context.Context, galleryIDHolder model.IDHolder, newComplaint model.NewGalleryComplaint) (*model.GalleryComplaint, error) {
	panic(fmt.Errorf("not implemented: CreateGalleryComplaint - createGalleryComplaint"))
}

// DeleteGalleryComplaint is the resolver for the deleteGalleryComplaint field.
func (r *mutationResolver) DeleteGalleryComplaint(ctx context.Context, complaintIDHolder model.IDHolder) (*model.DeleteResult, error) {
	panic(fmt.Errorf("not implemented: DeleteGalleryComplaint - deleteGalleryComplaint"))
}

// GetMyActiveGalleryComplaints is the resolver for the getMyActiveGalleryComplaints field.
func (r *queryResolver) GetMyActiveGalleryComplaints(ctx context.Context) ([]*model.GalleryComplaint, error) {
	panic(fmt.Errorf("not implemented: GetMyActiveGalleryComplaints - getMyActiveGalleryComplaints"))
}

// GetMyClosedGalleryComplaints is the resolver for the getMyClosedGalleryComplaints field.
func (r *queryResolver) GetMyClosedGalleryComplaints(ctx context.Context) ([]*model.GalleryComplaint, error) {
	panic(fmt.Errorf("not implemented: GetMyClosedGalleryComplaints - getMyClosedGalleryComplaints"))
}

// GetMyRefusedGalleryComplaints is the resolver for the getMyRefusedGalleryComplaints field.
func (r *queryResolver) GetMyRefusedGalleryComplaints(ctx context.Context) ([]*model.GalleryComplaint, error) {
	panic(fmt.Errorf("not implemented: GetMyRefusedGalleryComplaints - getMyRefusedGalleryComplaints"))
}
