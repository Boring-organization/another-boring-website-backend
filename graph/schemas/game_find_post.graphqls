type GameFindPost {
    id: String!
    text: String!
    author: User!
    createdAt: Int64!
    editedAt: Int64
    deletedAt: Int64
    likeCount: Int64!
    images: [Image!]!
    comments: [GameFindPostComment!]!
    isAnonymously: Boolean!
    isLikable: Boolean!
    kinks: [String!]!
}

input NewGameFindPost {
    text: String! @maxLength(value: 10000)
    imageIds: [String!]! @maxArrayLength(value: 10)
    isAnonymously: Boolean!
    isLikable: Boolean!
    kinks: [String!]!
}

input UpdateGameFindPost {
    text: String! @maxLength(value: 10000)
    imageIds: [String!]! @maxArrayLength(value: 10)
    isAnonymously: Boolean!
    isLikable: Boolean!
    kinks: [String!]!
}

extend type Mutation {
    createGameFindPost(newGameFindPost: NewGameFindPost!): GameFindPost! @authenticated
    updateGameFindPost(newGameFindPostData: UpdateGameFindPost!): GameFindPost! @authenticated
    deleteGameFindPost(gameFindPostIdHolder: IdHolder! @idExistInTable(table: Game_find_post)): DeleteResult! @authenticated
}

extend type Query {
    getGameFindPost(gameFindPostIdHolder: IdHolder! @idExistInTable(table: Game_find_post)): GameFindPost! @authenticated
    getMyGameFindPosts(paginationSettings: ListPaginationSettings!): [GameFindPost!]! @authenticated
    getUserGameFindPosts(userIdHolder: IdHolder! @idExistInTable(table: User), paginationSettings: ListPaginationSettings!): [GameFindPost!]! @authenticated
    getRecommendedGameFindPosts(paginationSettings: ListPaginationSettings!): [GameFindPost!]! @authenticated
}
