package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"TestGoLandProject/graph/model"
	"context"
	"fmt"
)

// CreatePostComplaint is the resolver for the createPostComplaint field.
func (r *mutationResolver) CreatePostComplaint(ctx context.Context, postIDHolder model.IDHolder, newComplaint model.NewPostComplaint) (*model.PostComplaint, error) {
	panic(fmt.Errorf("not implemented: CreatePostComplaint - createPostComplaint"))
}

// DeletePostComplaint is the resolver for the deletePostComplaint field.
func (r *mutationResolver) DeletePostComplaint(ctx context.Context, complaintIDHolder model.IDHolder) (*model.DeleteResult, error) {
	panic(fmt.Errorf("not implemented: DeletePostComplaint - deletePostComplaint"))
}

// GetMyActivePostComplaints is the resolver for the getMyActivePostComplaints field.
func (r *queryResolver) GetMyActivePostComplaints(ctx context.Context) ([]*model.PostComplaint, error) {
	panic(fmt.Errorf("not implemented: GetMyActivePostComplaints - getMyActivePostComplaints"))
}

// GetMyClosedPostComplaints is the resolver for the getMyClosedPostComplaints field.
func (r *queryResolver) GetMyClosedPostComplaints(ctx context.Context) ([]*model.PostComplaint, error) {
	panic(fmt.Errorf("not implemented: GetMyClosedPostComplaints - getMyClosedPostComplaints"))
}

// GetMyRefusedPostComplaints is the resolver for the getMyRefusedPostComplaints field.
func (r *queryResolver) GetMyRefusedPostComplaints(ctx context.Context) ([]*model.PostComplaint, error) {
	panic(fmt.Errorf("not implemented: GetMyRefusedPostComplaints - getMyRefusedPostComplaints"))
}
